name: Build packages for a release

# Controls when the action will run.
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build-linux:
    name: Build artifacts
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        # - os: macos-latest
        #   BUILD_OS_NAME: macos

        # - os: ubuntu-latest
        #   BUILD_OS_NAME: linux

        - os: ubuntu-latest
          BUILD_OS_NAME: arm

        # - os: windows-latest
        #   BUILD_OS_NAME: win64

    steps:
      # - name: Install dependencies
      #   run: |
      #     sudo apt install aptitude
      #     sudo aptitude -y install gcc-multilib

      - name: Set up Go 1.16
        id: go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16

      - name: Checkout etclabscore/core-geth
        uses: actions/checkout@v2

      - uses: pguyot/arm-runner-action@v1
        id: build_image
        if: ${{ matrix.BUILD_OS_NAME }} == 'arm'
        with:
          image_additional_mb: 2000
          copy_artifact_path: ./build/bin/
          copy_artifact_dest: ./build/bin/
          # shell: bash
          commands: |
              wget https://golang.org/dl/go1.16.9.linux-armv6l.tar.gz
              sudo tar -C /usr/local -xzf go1.16.9.linux-armv6l.tar.gz
              rm go1.16.9.linux-armv6l.tar.gz
              export PATH=$PATH:/usr/local/go/bin

              sudo GOARM=5 go run build/ci.go install -dlgo -arch arm

      - name: Build all packages
        if: ${{ matrix.BUILD_OS_NAME }} != 'arm'
        run: make all

      - name: Prepare archive's for release
        run: ./build/deploy.sh
        env:
          BUILD_OS_NAME: ${{ matrix.BUILD_OS_NAME }}

      - name: Upload release sssets
        uses: softprops/action-gh-release@v1
        with:
          files: core-geth*.zip*